{"version":3,"sources":["App.js"],"names":["pixelRatio","PixelRatio","get","deviceHeight","Dimensions","height","deviceWidth","width","normalize","size","time_interval","App","props","startTimer","t","a","async","nextPressed","timer","state","seconds","setState","Promise","resolve","reject","setInterval","clearInterval","check","correct_count","index","answers","map","l","i","numbers","result","levels","style","styles","numbersBox","key","l2","i2","numberResult","color","correct","value","taskStart","page","task","time_1","then","currentAnswer","variantCreate","time_2","underlayColor","onPress","numberAnswer","borderBottomColor","variants","variant_index","getRandomIntInclusive","variants_count","min_random","max_random","variantRender","variant","variantPress","variantText","numbers_count","pages","title","desc","button","buttonText","titleLevels","numbersBoxTask","numbersLine","numbersBoxVariants","buttonNext","descEnd","bannerError","e","alert","progressBar","Platform","OS","slider","styleAttr","indeterminate","progress","minimumValue","maximumValue","disabled","thumbTintColor","minimumTrackTintColor","maximumTrackTintColor","this","line","line_sum","step","push","min","max","Math","ceil","floor","random","number","container","pagesBox","Component","StyleSheet","create","flex","flexDirection","paddingTop","flexWrap","alignItems","justifyContent","marginTop","fontSize","padding","margin","borderBottomWidth","backgroundColor","top","position","zIndex","textAlign","borderRadius","fontWeight"],"mappings":"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","file":"static/js/app.0addf3ff.chunk.js","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {Component, Fragment} from 'react';\nimport { StyleSheet, Text, View, Dimensions, PixelRatio, TouchableHighlight, ProgressBarAndroid, Platform } from 'react-native';\nimport Slider from '@react-native-community/slider';\n\nconst pixelRatio = PixelRatio.get();\nconst deviceHeight = Dimensions.get('window').height;\nconst deviceWidth = Dimensions.get('window').width;\n\nconst normalize = (size) => {\n  if (pixelRatio === 2) {\n    // iphone 5s and older Androids\n    if (deviceWidth < 360) {\n      return size * 0.95;\n    } \n    // iphone 5\n    if (deviceHeight < 667) {\n      return size;\n    // iphone 6-6s\n    } else if (deviceHeight >= 667 && deviceHeight <= 735) {\n      return size * 1.15;\n    }\n    // older phablets\n    return size * 1.25;\n  } \n  if (pixelRatio === 3) {\n    // catch Android font scaling on small machines\n    // where pixel ratio / font scale ratio => 3:3\n    if (deviceWidth <= 360) {\n        return size;\n    }    \n    // Catch other weird android width sizings\n    if (deviceHeight < 667) {\n      return size * 1.15;\n    // catch in-between size Androids and scale font up\n    // a tad but not too much\n    }\n    if (deviceHeight >= 667 && deviceHeight <= 735) {\n      return size * 1.2;\n    }\n    // catch larger devices\n    // ie iphone 6s plus / 7 plus / mi note 等等\n    return size * 1.27;\n  }\n  if (pixelRatio === 3.5) {\n    // catch Android font scaling on small machines\n    // where pixel ratio / font scale ratio => 3:3\n    if (deviceWidth <= 360) {\n        return size;\n    // Catch other smaller android height sizings\n    }\n    if (deviceHeight < 667) {\n      return size * 1.20;\n    // catch in-between size Androids and scale font up\n    // a tad but not too much\n    }\n    if(deviceHeight >= 667 && deviceHeight <= 735) {\n      return size * 1.25;\n    }\n    // catch larger phablet devices\n    return size * 1.40;\n  }\n  // if older device ie pixelRatio !== 2 || 3 || 3.5\n  return size;\n}\nlet time_interval = null; //для прогресса\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 'start',\n      timer: 0, //Значение прогресса\n      time_1: 2, //Время запоминания\n      time_2: 15, //Время выполнения\n      numbers: [], //Номера с ответами\n      answers: [], //Решения, изначально пустые\n      task: 0,\n      levels: 9, //количество уровней\n      variants_count: 12, //количество вариантов ответа\n      numbers_count: 5, //количество цифр  в одном ряде\n      min_random: 1, //минимальное значение сгенерируемого числа\n      max_random: 7, //максимальное значение сгенерируемого числа\n      variants: [], //Варианты ответов\n      seconds: 0,\n      currentAnswer: 0, //Текущий сфокусированный инпут ответа\n      result: [],\n      correct_count: 0 //Количество правильных ответов\n    }\n  }\n\n  componentDidMount() {\n    for (let i = 0; i < (this.state.levels + 1); i++) {\n      let line = [], line_sum = [], step = 0, numbers = [], answers = [], result = [];\n      for (let i = 0; i < this.state.numbers_count; i++) {\n        line.push(this.getRandomIntInclusive(this.state.min_random, this.state.max_random));\n      }\n      for (let i = 0; i < (this.state.numbers_count - 1); i++) {\n        line_sum.push(line[step] + line[step+1]);\n        answers.push(0);\n        result.push({\"test\": 1});\n        step++;\n      }\n      numbers.push(line,line_sum);\n      this.state.numbers.push(numbers)\n      this.state.answers.push(answers)\n      this.state.result.push(result)\n      this.setState({\n        numbers: this.state.numbers,\n        answers: this.state.answers,\n        result: this.state.result\n      })\n    }\n  }\n\n  getRandomIntInclusive(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  startTimer = async (t, nextPressed = 0) =>{\n    let timer = nextPressed === 1 ? 0 : this.state.timer, seconds = 0\n    const setState = (a, seconds) => {\n      this.setState({\n        timer: a,\n        seconds: seconds\n      })\n    }\n    return new Promise(function(resolve, reject) {\n      time_interval = setInterval(() => {\n        timer = timer + 1/(t*10)\n        seconds = seconds + 10;\n        setState(timer, seconds)\n        if(timer >= 1) {\n          clearInterval(time_interval)\n          time_interval = null\n          resolve(1)\n        }\n      }, 100)\n    })\n  }\n\n  check = () => {\n    let correct_count = 0;\n    for (let index = 0; index < (this.state.levels + 1); index++) {\n      this.state.answers[index].map((l, i)=>{\n        if(this.state.numbers[index][1][i] == l) {\n          this.state.result[index][i] = {\n            'value': l,\n            'correct': true,\n            'correct_answer': this.state.numbers[index][1][i]\n          }\n          correct_count++\n        } else {\n          this.state.result[index][i] = {\n            'value': l,\n            'correct': false,\n            'correct_answer': this.state.numbers[index][1][i]\n          }\n        }\n        this.setState({result: this.state.result})\n      })\n    }\n    this.setState({\n      correct_count: correct_count\n    }, ()=>{\n    })\n    //console.log(this.state.result)\n  }\n\n  result = () => {\n    return this.state.result.map((l, i) => {\n      return (<View style={styles.numbersBox} key={i}>{\n                l.map((l2, i2) => {\n                 return (<Text style={[styles.numberResult,{color: !l2.correct ? '#e74c3c' : '#2ecc71'}]} key={i2}>{l2.value}</Text>)\n                })\n              }</View>)\n    })\n  }\n\n  taskStart = (nextPressed = 0) => {\n    if(nextPressed == 1 && time_interval) {\n      clearInterval(time_interval)\n      time_interval = null\n    }\n    this.setState({\n      page: 'task', \n      task: this.state.task + nextPressed\n    })\n    if(this.state.levels < this.state.task || nextPressed == 1 && this.state.task == this.state.levels) {\n      this.check()\n      this.setState({\n        page: 'finish',\n        task: 0,\n        timer: 0\n      })\n      return null;\n    }\n    this.startTimer(this.state.time_1, nextPressed).then(()=>{\n      this.setState({\n        page: 'task_sum',\n        timer: 0,\n        currentAnswer: 0\n      })\n      this.variantCreate()\n      this.startTimer(this.state.time_2).then(()=>{\n        this.setState({\n          task: this.state.task + 1,\n          timer: 0\n        }, ()=>{\n          this.taskStart();\n        })\n      })\n    })\n  }\n\n  numbersLine() {\n    if(this.state.task > this.state.levels) return null;\n    return this.state.numbers[this.state.task][0].map((l, i) => {\n      return (<Text style={styles.number} key={i}>{l}</Text>)\n    })\n  }\n\n  answers = () => {\n    if(this.state.task > this.state.levels) return null;\n    return this.state.answers[this.state.task].map((l, i) => {\n      return (<TouchableHighlight \n                key={i}\n                underlayColor=\"transparent\"\n                onPress={() => this.setState({currentAnswer: i})}>\n                  <Text style={[styles.numberAnswer, {\n                    borderBottomColor: (this.state.currentAnswer === i) ? '#7f8c8d' : ((l == '0') ? '#ecf0f1' : 'black'),\n                    color: (this.state.currentAnswer === i) ? '#7f8c8d' : ((l == '0') ? '#ecf0f1' : 'black')\n                  }]}>{l}</Text>\n              </TouchableHighlight>)\n    })\n  }\n\n  variantCreate = () => {\n    let variants = []\n    if(this.state.task > this.state.levels) return null;\n    this.state.numbers[this.state.task][1].map((l, i) => {\n      let variant_index = this.getRandomIntInclusive(0,(this.state.variants_count-1));\n      if(!variants[variant_index]) {\n        variants[variant_index] = l\n      } else {\n        variants[this.getRandomIntInclusive(0,(this.state.variants_count-1))] = l\n      }\n    })\n    for (let i = 0; i < this.state.variants_count; i++) {\n      if(!variants[i]) {\n        variants[i] = this.getRandomIntInclusive(this.state.min_random*2,this.state.max_random*2)\n      }\n    }\n    this.setState({variants: variants})\n    //console.log(variants)\n  }\n\n  variantRender = () => {\n    return this.state.variants.map((l, i) => {\n      return (<TouchableHighlight\n                key={i}\n                underlayColor=\"#5cd28e\"\n                style={styles.variant}\n                onPress={() => this.variantPress(l, i)}\n              >\n                <Text style={styles.variantText} key={i}>{l}</Text>\n              </TouchableHighlight>);\n    })\n  }\n\n  variantPress = (value, key) => {\n    this.state.answers[this.state.task][this.state.currentAnswer] = value;\n    this.setState({answers: this.state.answers}, ()=>{\n      this.setState({\n        currentAnswer: (this.state.currentAnswer === (this.state.numbers_count - 2)) ? 0 : (this.state.currentAnswer+1)\n      })\n    });\n  }\n\n  pages = () => {\n    switch (this.state.page) {\n      case \"start\":\n        return (<Fragment>\n                  <Text style={styles.title}>Тренировка памяти</Text>\n                  <Text style={styles.desc}>Вам будут приведены {this.state.numbers_count} чисел. Ваша задача –\n                    постараться их запомнить в течении {this.state.time_1} секунд, затем в уме сложить первое со вторым, а\n                    полученную сумму записать; второе число сложить с третьим, сумму\n                    записать; и так далее. Таким образом, у вас должно\n                    быть получено и записано {this.state.numbers_count - 1} суммы. Время вычисления и\n                    выполнения {this.state.time_2} секунд. После чего приступаете к следующему ряду чисел</Text>\n                  <TouchableHighlight\n                    underlayColor=\"#5cd28e\"\n                    style={styles.button}\n                    onPress={() => this.taskStart()}\n                  >\n                    <Text style={styles.buttonText}>Начать</Text>\n                  </TouchableHighlight>\n                </Fragment>)\n      \n      case \"task\":\n        return (<Fragment>\n                  <Text style={styles.titleLevels}>{this.state.task + 1}/{this.state.levels + 1}</Text>\n                  <Text style={styles.title}>Запомните числа</Text>\n                  <View style={styles.numbersBoxTask}>\n                    {this.numbersLine()}\n                  </View>\n                </Fragment>)\n\n      case \"task_sum\":\n        return (<Fragment>\n                  <Text style={styles.titleLevels}>{this.state.task + 1}/{this.state.levels + 1}</Text>\n                  <Text style={styles.title}>Укажите ответы</Text>\n                  <View style={styles.numbersBox}>\n                    {this.answers()}\n                  </View>\n                  <View style={styles.numbersBoxVariants}>\n                    {this.variantRender()}\n                  </View>\n                  <TouchableHighlight\n                    underlayColor=\"#7f8c8d\"\n                    style={styles.buttonNext}\n                    onPress={() => this.taskStart(1)}\n                  >\n                    <Text style={styles.buttonText}>Далее</Text>\n                  </TouchableHighlight>\n                </Fragment>)\n\n      case \"finish\":\n        return (<Fragment>\n                  <Text style={styles.title}>Результат</Text>\n                  <Text style={styles.descEnd}>Количество правильных ответов - {this.state.correct_count}. Норма взрослого человека – от {((this.state.numbers_count-1)*10)*0.75} и выше</Text>\n                  {this.result()}\n                  <TouchableHighlight\n                    underlayColor=\"#5cd28e\"\n                    style={styles.button}\n                    onPress={() => this.taskStart()}\n                  >\n                    <Text style={styles.buttonText}>Начать заново</Text>\n                  </TouchableHighlight>\n                </Fragment>)\n    \n      default:\n        break;\n    }\n  }\n\n  bannerError = (e) => {\n    alert(e)\n  }\n\n  progressBar = () => {\n    if(Platform.OS == 'android') {\n      return <ProgressBarAndroid style={styles.slider} styleAttr=\"Horizontal\" color=\"#e74c3c\" indeterminate={false} progress={this.state.timer} />\n    } else {\n      return <Slider\n          style={styles.slider}\n          minimumValue={0}\n          maximumValue={1}\n          value={this.state.timer}\n          disabled={false}\n          thumbTintColor=\"transparent\"\n          minimumTrackTintColor=\"#e74c3c\"\n          maximumTrackTintColor=\"#2ecc71\"\n      />\n    }\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n      <View style={styles.pagesBox}>\n        {this.progressBar()}\n        {this.pages()}\n        <StatusBar style=\"auto\" />\n      </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  numbersBox: {\n    flexDirection: 'row',\n  },\n  numbersBoxTask: {\n    flexDirection: 'row',\n    paddingTop:10\n  },\n  numbersBoxVariants: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 30\n  },\n  number: {\n    fontSize: normalize(34),\n    color: 'black',\n    padding: 5\n  },\n  numberResult: {\n    fontSize: normalize(24),\n    color: '#7f8c8d',\n    padding: 5\n  },\n  numberAnswer: {\n    fontSize: normalize(34),\n    color: '#7f8c8d',\n    margin: 5,\n    padding: 5,\n    borderBottomColor: '#7f8c8d',\n    borderBottomWidth: 3\n  },\n  pagesBox: {\n    flex: 1,\n    padding: 15,\n    paddingTop: 0,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  slider: {\n    top: 0,\n    position: 'absolute',\n    width: '100%', \n    height: Platform.OS == 'android' ? 4 : 2,\n    zIndex: 1000,\n  },\n  title: {\n    fontSize: normalize(28),\n    textAlign: 'center',\n    padding: 15,\n  },\n  titleLevels: {\n    fontSize: normalize(28),\n    textAlign: 'center',\n    padding: 15,\n    color: '#7f8c8d',\n  },\n  desc: {\n    fontSize: normalize(14),\n    textAlign: 'center',\n    padding: 15\n  },\n  descEnd: {\n    fontSize: normalize(14),\n    textAlign: 'center',\n    padding: 15,\n    paddingTop: 0\n  },\n  button: {\n    backgroundColor: '#2ecc71',\n    borderRadius: 30,\n    width: '50%',\n    margin: 15\n  },\n  buttonNext: {\n    backgroundColor: '#bdc3c7',\n    borderRadius: 30,\n    width: '50%',\n    margin: 15,\n    marginTop: 30\n  },\n  variant: {\n    backgroundColor: '#2ecc71',\n    borderRadius: 25,\n    width: 50,\n    height: 50,\n    margin: 10\n  },\n  variantText: {\n    fontSize: 20,\n    fontWeight: '500',\n    textAlign: 'center',\n    padding: 10,\n    color: 'white'\n  },\n  buttonText: {\n    fontSize: normalize(16),\n    fontWeight: '500',\n    textAlign: 'center',\n    padding: 15,\n    color: 'white'\n  }\n});\n"],"sourceRoot":""}